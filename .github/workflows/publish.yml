name: Publish to GitHub Packages

on:
  release:
    types: [created]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get base commit
        id: base-commit
        run: |
          # Try to get the previous release tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
            # First release - compare with first commit
            BASE=$(git rev-list --max-parents=0 HEAD)
          else
            # Subsequent releases - compare with previous tag
            BASE=$PREV_TAG
          fi
          echo "Using base: $BASE"
          echo "base=$BASE" >> $GITHUB_OUTPUT

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@jameshusband'

      - name: Install dependencies
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> .npmrc
          npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Initialize Nx Cloud
        run: npx nx connect-to-nx-cloud

      - name: Build affected packages
        run: npx nx affected --target=build --base=${{ steps.base-commit.outputs.base }}

      - name: Get affected packages
        id: affected-packages
        run: |
          echo "Getting affected projects..."
          PROJECTS=$(npx nx show projects --affected --base=${{ steps.base-commit.outputs.base }})
          echo "Found projects: $PROJECTS"
          
          # Initialize empty array for packages
          declare -a PACKAGE_DIRS=()
          
          echo "Processing projects..."
          for project in $PROJECTS; do
            echo "Checking project: $project"
            if [[ "$project" == "HelloWorld" ]]; then
              dir="packages/helloWorld"
              echo "Processing directory: $dir"
              if [ -f "$dir/package.json" ]; then
                name=$(node -p "require('./$dir/package.json').name")
                echo "Found package: $name"
                PACKAGE_DIRS+=("$dir")
              fi
            elif [[ "$project" == "PingPong" ]]; then
              dir="packages/ping-pong"
              echo "Processing directory: $dir"
              if [ -f "$dir/package.json" ]; then
                name=$(node -p "require('./$dir/package.json').name")
                echo "Found package: $name"
                PACKAGE_DIRS+=("$dir")
              fi
            fi
          done
          
          # Convert array to JSON string
          JSON_ARRAY=$(printf '%s\n' "${PACKAGE_DIRS[@]}" | jq -R . | jq -s .)
          echo "Final packages list: $JSON_ARRAY"
          echo "packages=$JSON_ARRAY" >> $GITHUB_OUTPUT

      - name: Publish packages
        if: steps.affected-packages.outputs.packages != '[]'
        run: |
          for dir in $(echo '${{ steps.affected-packages.outputs.packages }}' | jq -r '.[]'); do
            if [ -f "$dir/package.json" ]; then
              cd $dir
              # Ensure correct publishConfig
              npm pkg set "publishConfig.@JamesHusband:registry"="https://npm.pkg.github.com"
              npm publish --access public
              cd -
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 