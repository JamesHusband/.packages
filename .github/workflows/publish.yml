name: Publish to GitHub Packages

on:
  release:
    types: [created]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get base commit
        id: base-commit
        run: |
          # Get the previous release tag, fallback to the first commit if no previous release
          BASE=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || git rev-list --max-parents=0 HEAD)
          echo "base=$BASE" >> $GITHUB_OUTPUT

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@jameshusband'

      - name: Install dependencies
        run: npm install

      - name: Initialize Nx Cloud
        run: npx nx connect-to-nx-cloud

      - name: Build affected packages
        run: npx nx affected --target=build --base=${{ steps.base-commit.outputs.base }}

      - name: Get affected packages
        id: affected-packages
        run: |
          AFFECTED=$(npx nx print-affected --base=${{ steps.base-commit.outputs.base }} --select=projects | jq -c '. | map(select(startswith("packages/"))) | map(sub("^packages/"; "packages/"))')
          echo "packages=$AFFECTED" >> $GITHUB_OUTPUT

      - name: Publish affected packages
        if: steps.affected-packages.outputs.packages != '[]'
        run: |
          for dir in $(echo '${{ steps.affected-packages.outputs.packages }}' | jq -r '.[]'); do
            if [ -f "$dir/package.json" ]; then
              cd $dir
              # Ensure correct publishConfig
              npm pkg set "publishConfig.@JamesHusband:registry"="https://npm.pkg.github.com"
              npm publish --access public
              cd -
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 